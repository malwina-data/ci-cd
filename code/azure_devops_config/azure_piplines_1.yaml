pool:
  name: 'Default'
  demands:
    - agent.name -equals AgentSelfHosted 

steps:
  - script: |
      echo "Updating package list"
      sudo apt update
    displayName: Update apt
    continueOnError: false

  - script: |
      sudo apt update
      sudo apt install -y software-properties-common
      sudo add-apt-repository -y ppa:deadsnakes/ppa
      sudo apt update
      sudo apt install -y python3.10 python3.10-venv python3.10-dev
    displayName: Install Python 3.10

  - script: |
      echo "Checking Python version"
      python3.10 --version
    displayName: Check Python Version

  - script: |
      sudo apt install -y python3.10 python3.10-venv python3.10-dev
    displayName: Save Log to File
    
  - script: |
      sudo apt update
      sudo apt install -y python3-venv python3-pip
      python3 -m venv /home/ubuntu/app/myenv
      ls /home/ubuntu/app/
      source /home/ubuntu/app/myenv/bin/activate
      pip install flask pytest gunicorn
    displayName: Pip install

  - script: |
      source /home/ubuntu/app/myenv/bin/activate
      pytest --junitxml=results.xml
    displayName: Check pytest version

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/results.xml'
      testResultsFormat: 'JUnit'
  
  - script: |
      echo "Listing files"
      ls $(System.DefaultWorkingDirectory)
    displayName: 'List files in working directory'

  - task: CopyFilesOverSSH@0
    inputs:
      sshEndpoint: 'AWS-EC2-Production'
      sourceFolder: '$(System.DefaultWorkingDirectory)/code'
      contents: '**/*'
      targetFolder: '/home/ubuntu/app'

  - task: SSH@0
    inputs:
      sshEndpoint: 'AWS-EC2-Production'
      runOptions: 'commands'
      commands: |
        chmod +x /home/ubuntu/app/deploy.sh 
        /home/ubuntu/app/deploy.sh
    displayName: 'Uruchomienie aplikacji na serwerze'

  - script: |
      echo "Sprawdzanie dostępności aplikacji..."
      PUBLIC_IP=$(curl -s ifconfig.me)
      curl -f http://$PUBLIC_IP:5000 || exit 1
    displayName: 'Test dostępności aplikacji'




