# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  name: 'Default'
  demands:
    - agent.name -equals AgentSelfHosted 

steps:
  - script: |
      echo "Updating package list"
      sudo apt update
    displayName: Update apt
    continueOnError: false

  - script: |
      echo "Installing Python 3.10"
      sudo apt install -y python3.10 python3.10-venv python3.10-dev
    displayName: Install Python 3.10
    continueOnError: false

  - script: |
      echo "Checking Python version"
      python3.10 --version
    displayName: Check Python Version

  - script: |
      sudo apt install -y python3.10 python3.10-venv python3.10-dev >> installation_log.txt 2>&1
    displayName: Save Log to File
    
  - script: |
      sudo apt update
      sudo apt install -y python3-venv python3-pip
      python3 -m venv myenv
      source myenv/bin/activate

      pip install -r requirements.txt
      pip install pytest  # Możesz pominąć, jeśli pytest jest w 'requirements.txt'

      # Uruchamianie testów
      pytest --maxfail=1 --disable-warnings -q
    displayName: Check pytest version
